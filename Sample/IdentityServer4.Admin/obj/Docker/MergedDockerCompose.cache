networks:
  identityserverui:
    driver: bridge
  proxy:
    driver: bridge
services:
  db:
    container_name: skoruba-identityserver4-db
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: Password_123
    image: mcr.microsoft.com/mssql/server:2017-CU20-ubuntu-16.04
    networks:
      identityserverui: {}
    ports:
    - published: 7900
      target: 1433
    volumes:
    - dbdata:/var/opt/mssql:rw
  identityserver4.admin.admin:
    build:
      context: E:\R&D\Sample\IdentityServer4.Admin
      dockerfile: src/IdentityServer4.Admin.Admin/Dockerfile
    command: dotnet IdentityServer4.Admin.Admin.dll /seed
    container_name: skoruba-identityserver4-admin
    depends_on:
      db:
        condition: service_started
      identityserver4.admin.sts.identity:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      AdminConfiguration__IdentityAdminBaseUrl: https://admin.skoruba.local
      AdminConfiguration__IdentityAdminRedirectUri: https://admin.skoruba.local/signin-oidc
      AdminConfiguration__IdentityServerBaseUrl: https://sts.skoruba.local
      AdminConfiguration__RequireHttpsMetadata: "false"
      ConnectionStrings__AdminAuditLogDbConnection: Server=db;Database=IdentityServer4Admin;User
        Id=sa;Password=Password_123;MultipleActiveResultSets=true
      ConnectionStrings__AdminLogDbConnection: Server=db;Database=IdentityServer4Admin;User
        Id=sa;Password=Password_123;MultipleActiveResultSets=true
      ConnectionStrings__ConfigurationDbConnection: Server=db;Database=IdentityServer4Admin;User
        Id=sa;Password=Password_123;MultipleActiveResultSets=true
      ConnectionStrings__DataProtectionDbConnection: Server=db;Database=IdentityServer4Admin;User
        Id=sa;Password=Password_123;MultipleActiveResultSets=true
      ConnectionStrings__IdentityDbConnection: Server=db;Database=IdentityServer4Admin;User
        Id=sa;Password=Password_123;MultipleActiveResultSets=true
      ConnectionStrings__PersistedGrantDbConnection: Server=db;Database=IdentityServer4Admin;User
        Id=sa;Password=Password_123;MultipleActiveResultSets=true
      DockerConfiguration__UpdateCaCertificate: "true"
      IdentityServerData__Clients__0__AllowedCorsOrigins__0: https://admin.skoruba.local
      IdentityServerData__Clients__0__ClientUri: https://admin.skoruba.local
      IdentityServerData__Clients__0__FrontChannelLogoutUri: https://admin.skoruba.local/signin-oidc
      IdentityServerData__Clients__0__PostLogoutRedirectUris__0: https://admin.skoruba.local/signout-callback-oidc
      IdentityServerData__Clients__0__RedirectUris__0: https://admin.skoruba.local/signin-oidc
      IdentityServerData__Clients__1__RedirectUris__0: https://admin-api.skoruba.local/swagger/oauth2-redirect.html
      Serilog__WriteTo__1__Args__connectionString: Server=db;Database=IdentityServer4Admin;User
        Id=sa;Password=Password_123;MultipleActiveResultSets=true
      VIRTUAL_HOST: admin.skoruba.local
    image: skoruba-identityserver4-admin
    networks:
      identityserverui: {}
    volumes:
    - E:\R&D\Sample\IdentityServer4.Admin\shared\identitydata.json:/app/identitydata.json:rw
    - E:\R&D\Sample\IdentityServer4.Admin\shared\identityserverdata.json:/app/identityserverdata.json:rw
    - E:\R&D\Sample\IdentityServer4.Admin\shared\serilog.json:/app/serilog.json:rw
    - C:\Users\van.nguyenminh\AppData\Roaming\Microsoft\UserSecrets:/root/.microsoft/usersecrets:ro
    - E:\R&D\Sample\IdentityServer4.Admin\shared\nginx\certs\cacerts.crt:/usr/local/share/ca-certificates/cacerts.crt:rw
  identityserver4.admin.admin.api:
    build:
      context: E:\R&D\Sample\IdentityServer4.Admin
      dockerfile: src/IdentityServer4.Admin.Admin.Api/Dockerfile
    container_name: skoruba-identityserver4-admin-api
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      AdminApiConfiguration__ApiBaseUrl: https://admin-api.skoruba.local
      AdminApiConfiguration__IdentityServerBaseUrl: https://sts.skoruba.local
      AdminApiConfiguration__RequireHttpsMetadata: "false"
      ConnectionStrings__AdminAuditLogDbConnection: Server=db;Database=IdentityServer4Admin;User
        Id=sa;Password=Password_123;MultipleActiveResultSets=true
      ConnectionStrings__AdminLogDbConnection: Server=db;Database=IdentityServer4Admin;User
        Id=sa;Password=Password_123;MultipleActiveResultSets=true
      ConnectionStrings__ConfigurationDbConnection: Server=db;Database=IdentityServer4Admin;User
        Id=sa;Password=Password_123;MultipleActiveResultSets=true
      ConnectionStrings__DataProtectionDbConnection: Server=db;Database=IdentityServer4Admin;User
        Id=sa;Password=Password_123;MultipleActiveResultSets=true
      ConnectionStrings__IdentityDbConnection: Server=db;Database=IdentityServer4Admin;User
        Id=sa;Password=Password_123;MultipleActiveResultSets=true
      ConnectionStrings__PersistedGrantDbConnection: Server=db;Database=IdentityServer4Admin;User
        Id=sa;Password=Password_123;MultipleActiveResultSets=true
      DockerConfiguration__UpdateCaCertificate: "true"
      VIRTUAL_HOST: admin-api.skoruba.local
    image: skoruba-identityserver4-admin-api
    networks:
      identityserverui: {}
    volumes:
    - E:\R&D\Sample\IdentityServer4.Admin\shared\serilog.json:/app/serilog.json:rw
    - C:\Users\van.nguyenminh\AppData\Roaming\Microsoft\UserSecrets:/root/.microsoft/usersecrets:ro
    - E:\R&D\Sample\IdentityServer4.Admin\shared\nginx\certs\cacerts.crt:/usr/local/share/ca-certificates/cacerts.crt:rw
  identityserver4.admin.sts.identity:
    build:
      context: E:\R&D\Sample\IdentityServer4.Admin
      dockerfile: src/IdentityServer4.Admin.STS.Identity/Dockerfile
    container_name: skoruba-identityserver4-sts-identity
    depends_on:
      db:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      AdminConfiguration__IdentityAdminBaseUrl: https://admin.skoruba.local
      AdvancedConfiguration__IssuerUri: https://sts.skoruba.local
      AdvancedConfiguration__PublicOrigin: https://sts.skoruba.local
      ConnectionStrings__ConfigurationDbConnection: Server=db;Database=IdentityServer4Admin;User
        Id=sa;Password=Password_123;MultipleActiveResultSets=true
      ConnectionStrings__DataProtectionDbConnection: Server=db;Database=IdentityServer4Admin;User
        Id=sa;Password=Password_123;MultipleActiveResultSets=true
      ConnectionStrings__IdentityDbConnection: Server=db;Database=IdentityServer4Admin;User
        Id=sa;Password=Password_123;MultipleActiveResultSets=true
      ConnectionStrings__PersistedGrantDbConnection: Server=db;Database=IdentityServer4Admin;User
        Id=sa;Password=Password_123;MultipleActiveResultSets=true
      DockerConfiguration__UpdateCaCertificate: "true"
      VIRTUAL_HOST: sts.skoruba.local
    image: skoruba-identityserver4-sts-identity
    networks:
      identityserverui:
        aliases:
        - sts.skoruba.local
    volumes:
    - E:\R&D\Sample\IdentityServer4.Admin\shared\serilog.json:/app/serilog.json:rw
    - C:\Users\van.nguyenminh\AppData\Roaming\Microsoft\UserSecrets:/root/.microsoft/usersecrets:ro
    - E:\R&D\Sample\IdentityServer4.Admin\shared\nginx\certs\cacerts.crt:/usr/local/share/ca-certificates/cacerts.crt:rw
  nginx-proxy:
    container_name: nginx
    image: jwilder/nginx-proxy
    networks:
      identityserverui:
        aliases:
        - admin-api.skoruba.local
        - admin.skoruba.local
        - sts.skoruba.local
      proxy: {}
    ports:
    - published: 80
      target: 80
    - published: 443
      target: 443
    restart: always
    volumes:
    - E:\R&D\Sample\IdentityServer4.Admin\shared\nginx\certs:/etc/nginx/certs:ro
    - E:\R&D\Sample\IdentityServer4.Admin\shared\nginx\vhost.d:/etc/nginx/vhost.d:rw
    - /var/run/docker.sock:/tmp/docker.sock:ro
version: '3.4'
volumes:
  dbdata:
    driver: local